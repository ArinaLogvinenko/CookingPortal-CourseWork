<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CookingPortal</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand text-dark" asp-area="" asp-controller="Recipe" asp-action="Index">CookingPortal</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Recipe" asp-action="FollowingRecipes">Following recipes</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Recipe" asp-action="SavedRecipes">Favorite</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="FollowingAuthors">Following authors</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Chat</a>
                            </li>
                        }
                    </ul>

                    @if (!User.Identity.IsAuthenticated)
                    {
                        <ul class="navbar-nav">
                            <li class="nav-item login">
                                <a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Log in</a>
                            </li>
                            <li class="nav-item sign-in">
                                <a class="nav-link text-light btn btn-primary" asp-area="" asp-controller="User" asp-action="Register">Sign up</a>
                            </li>
                        </ul>
                    }

                    @if (User.Identity.IsAuthenticated)
                    {
                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    Me
                                </button>
                                <ul class="dropdown-menu dropdown-menu-light" aria-labelledby="navbarLightDropdownMenuLink">
                                    <li><a class="dropdown-item  " asp-controller="User" asp-action="Profile">View profile</a></li>
                                    <li><a class="dropdown-item" asp-area="" asp-controller="Recipe" asp-action="OwnRecipes">My recipes</a></li>
                                    <div class="dropdown-divider"></div>
                                    <li><a class="dropdown-item" asp-area="" asp-controller="User" asp-action="Logout">Log out</a></li>
                                </ul>
                            </li>
                        </ul>
                    }
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - CookingPortal - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="@Url.Content("~/Scripts/jquery-1.5.1.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
            integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
            crossorigin="anonymous"></script>
    @RenderSection("Scripts", required: false)
    @*<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>*@
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/lib/jquery-ajax-unobtrusive/dist/jquery.unobtrusive-ajax.js"></script>
    <script>
        class Message {
                constructor(username, text, when) {
                    this.userName = username;
                    this.text = text;
                    this.when = when;
                }
            }

            // userName is declared in razor page.
            const username = '@User.Identity.Name';
            const textInput = document.getElementById('messageText');
            const whenInput = document.getElementById('when');
            const chat = document.getElementById('chat');
            const messagesQueue = [];

            document.getElementById('submitButton').addEventListener('click', () => {
                var currentdate = new Date();
                //whenInput.innerHTML =
                //    (currentdate.getMonth() + 1) + "/"
                //    + currentdate.getDate() + "/"
                //    + currentdate.getFullYear() + " "
                //    + currentdate.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })
            });

            function clearInputField() {
                messagesQueue.push(textInput.value);
                textInput.value = "";
            }

            function sendMessage() {
                let text = messagesQueue.shift() || "";
                if (text.trim() === "") return;
    
                let when = new Date();
                let message = new Message(username, text);
                sendMessageToHub(message);
            }

            function addMessageToChat(message) {
                let isCurrentUserMessage = message.userName === username;

                let container = document.createElement('div');
                container.className = isCurrentUserMessage ? "container bg-white" : "container";

                let sender = document.createElement('p');
                sender.className = "sender";
                sender.innerHTML = message.userName;
                let text = document.createElement('p');
                text.innerHTML = message.text;

                let when = document.createElement('span');
                when.className = isCurrentUserMessage ? "time-right" : "time-right";
                var currentdate = new Date();
                when.innerHTML = 
                    (currentdate.getMonth() + 1) + "/"
                    + currentdate.getDate() + "/"
                    + currentdate.getFullYear() + " "
                    + currentdate.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true })

                container.appendChild(sender);
                container.appendChild(text);
                container.appendChild(when);
                chat.appendChild(container);
            }

        var connection = new signalR.HubConnectionBuilder()
                .withUrl('/Home/Index')
                .build();

            connection.on('receiveMessage', addMessageToChat);

            connection.start()
                .catch(error => {
                    console.error(error.message);
                });

            function sendMessageToHub(message) {
                connection.invoke('sendMessage', message);
            }
    </script>
</body>
</html>
