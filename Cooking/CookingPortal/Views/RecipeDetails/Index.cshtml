@using Application.DTO;

@model RecipeDTO
@{
    ViewBag.Title = "Index";
}

<div class="recipe-details">
    <ul class="recipes">
        <div class="recipe">
            <div class="recipe_content">
                <div class="card recipe_content mb-5" style="width: 18rem;">
                    <img src="@Model.Image" class="card-img-top" alt="...">
                    <div class="card-body">
                        <h5 class="card-title">@Model.Name</h5>
                        <p class="card-subtitle mb-2 text-muted">@Model.Description</p>
                        <h6 class="card-subtitle">Ingredients:</h6>
                        <p class="card-text">@Model.Ingredients</p>
                        <h6 class="card-subtitle">Serving time:</h6>
                        <p class="card-text">@Model.ServingTime</p>
                        <h6 class="card-subtitle">Nutrition facts:</h6>
                        <p class="card-text">@Model.NutritionFacts</p>
                        <h6 class="card-subtitle">Author:</h6>
                        <a href="@Url.Action("UserProfile", "User", new { userId = Model.Author.Id })" class="link-primary">@Model.Author.FullName</a>
                    </div>
                </div>
            </div>
        </div>
    </ul>

    <div class="actions">
        <div class="action-btns mb-4">
            <div class="favorite_recipes">
                @if (Model.IsSaved)
                {
                    <button class="btn btn btn-outline-danger" id="unsaveRecipe">Remove from favorite</button>
                }
                else
                {
                    <button id="saveRecipe" class="btn btn-outline-primary">Add to favorite</button>
                }
            </div>
            <div class="following-authors">
                @if (Model.IsFollowToAuthor)
                {
                    <button class="btn btn btn-outline-danger" id="unfollow">Unfollow the author</button>
                }
                else
                {
                    <button class="btn btn-outline-primary" id="follow">Follow the author</button>
                }
            </div>
        </div>

        @if (Model.Comments is not null)
        {
            <div class="comments mb-4">
                @foreach (var comment in Model.Comments)
                {
                    <div class="author_recipe py-2 px-3 border rounded bg-light mb-2">
                        <p class="author m-0"><h6>@comment.Author.FullName</h6></p>
                        <p class="message text-secondary m-0">@comment.Comment</p>
                    </div>
                }
            </div>
            
        }

        <input type="text" class="form-control mb-2" id="commentArea">
        <button class="btn btn-light" id="createComment">Add Comment</button>
    </div>
</div>

<script>
    window.onload = (e) => {
        const btn = document.querySelector('#createComment');
        btn.addEventListener("click", (e) => {
            const comment = document.querySelector('#commentArea');

            var requestUrl = '/api/RecipeDetails/AddComment';

            var http = new XMLHttpRequest();
            http.open("POST", requestUrl, true);
            http.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
            http.onreadystatechange = function () {
                if (http.readyState == 4 && http.status == 200) {
                    window.location.href = '/api/RecipeDetails/Index?recipeId=@Model.Id'
                }
            }

            var data = JSON.stringify({
                RecipeId: @Model.Id,
                AuthorId: @Model.Author.Id,
                Comment: comment.value
            });


            http.send(data);
        });

        const btnSave = document.querySelector('#saveRecipe');
        if (btnSave){
            btnSave.addEventListener("click", (e) => {
                var requestUrl = '/api/RecipeDetails/FollowRecipe';

                var http = new XMLHttpRequest();
                http.open("POST", requestUrl, true);
                http.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        window.location.href = '/api/RecipeDetails/Index?recipeId=@Model.Id'
                    }
                }

                var data = @Model.Id;

                http.send(data);
            });
        }

        const btnunSave = document.querySelector('#unsaveRecipe');
        if (btnunSave){
            btnunSave.addEventListener("click", (e) => {
                var requestUrl = '/api/RecipeDetails/UnFollowRecipe';

                var http = new XMLHttpRequest();
                http.open("POST", requestUrl, true);
                http.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        window.location.href = '/api/RecipeDetails/Index?recipeId=@Model.Id'
                    }
                }

                var data = @Model.Id;

                http.send(data);
            });
        }
        
        const btnfollow = document.querySelector('#follow');
        if (btnfollow){
            btnfollow.addEventListener("click", (e) => {
                var requestUrl = '/api/RecipeDetails/FollowRecipeAuthor';

                var http = new XMLHttpRequest();
                http.open("POST", requestUrl, true);
                http.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        window.location.href = '/api/RecipeDetails/Index?recipeId=@Model.Id'
                    }
                }

                var data = @Model.Author.Id;

                http.send(data);
            });
        }

        const btnunfollow = document.querySelector('#unfollow');
        if (btnunfollow){
            btnunfollow.addEventListener("click", (e) => {
                var requestUrl = '/api/RecipeDetails/UnFollowRecipeAuthor';

                var http = new XMLHttpRequest();
                http.open("POST", requestUrl, true);
                http.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
                http.onreadystatechange = function () {
                    if (http.readyState == 4 && http.status == 200) {
                        window.location.href = '/api/RecipeDetails/Index?recipeId=@Model.Id'
                    }
                }

                var data = @Model.Author.Id;

                http.send(data);
            });
        }
    };
</script>

